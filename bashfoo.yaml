# bashfoo.yaml

# https://github.com/dannguyen/bashfoo

# Dan Nguyen's personally curated list of bash/command-line commands and snippets
#   that are useful but yet he keeps forgetting

# Template:
#
#
# "slug_for_command":
#   date: YYYY-MM-DD
#
#   articles:
#       - title: related article title
#         url: https://example.com
#
#     code: |
#       find . -name "foo*"
#
#     output: |
#
#        sample output
#        from utils stdout/stedrr
#
#     notes: |
#         freeform text to be rendered as markdown...
############################################################################################################



"`ogr2ogr` convert a shapefile into CSV + GeoJSON":
  date: 2021-11-16
  code: |
    ogr2ogr -f CSV \
        -dialect sqlite \
        -sql 'SELECT *, AsGeoJSON(geometry) AS geom FROM chicago_neighborhoods' \
        chicago_neighborhoods_output.csv  \
        chicago_neighborhoods.shp

  articles:
    - url: https://medium.com/google-cloud/how-to-load-geographic-data-like-zipcode-boundaries-into-bigquery-25e4be4391c8
      title: How to load geographic data like shapefiles into BigQuery
    - url: https://gdal.org/programs/ogr2ogr.html
      title: ogr2ogr man page

  notes: |
    Chicago neighborhood shapefile comes from [the city data portal](https://data.cityofchicago.org/Facilities-Geographic-Boundaries/Boundaries-Neighborhoods/bbvz-uum9)

    Download a mirror copy from this repo: [chicago_neighborhoods.zip](assets/samples/chicago_neighborhoods.zip)

    See the results of turning a shapefile into CSV: [chicago_neighborhoods_output.csv](assets/samples/chicago_neighborhoods_output.csv)



"`ffmpeg` optimize video and reduce its file size":
  date: 2021-11-15
  code: |
    ffmpeg -i my_video.mp4 -vcodec libx264 -crf 28 my_video_optimized.mp4
  articles:
    - url: https://unix.stackexchange.com/questions/28803/how-can-i-reduce-a-videos-size-with-ffmpeg
      title: How can I reduce a video's size with ffmpeg?


"`youtube-dl` to download just a video's transcript/subtitle files":
  date: 2021-08-04
  code: |
    youtube-dl --write-sub --skip-download https://www.youtube.com/watch?v=PMp_-OX15Jc

  output: |
    [youtube] PMp_-OX15Jc: Downloading webpage
    [youtube] PMp_-OX15Jc: Downloading MPD manifest
    [info] Writing video subtitles to: What is Public Domain-PMp_-OX15Jc.en.vtt




"`date` add a UTC timestamp in ISO-8601 format to a filename":
  date: 2021-08-03
  code: |
    # Just the current UTC date using GNU date, i.e. gdate on macOS
    printf "mydata_%s.csv\n" $(gdate --utc -I)
    # >>>> mydata_2021-08-03.csv

    # UTC date with hours+minutes, GNU and BSD compatible
    printf "mydata_%s.csv\n" $(date -u +"%Y-%m-%d-%H%M")
    # >>>> mydata_2021-08-03-1248.csv
  articles:
    - url: https://unix.stackexchange.com/questions/164826/date-command-iso-8601-option
      title: "date command --iso-8601 option"


"`ssh-add` a new SSH key to system ssh-agent (macOS)":
  date: 2021-08-02
  code: |
    # put this in bash profile
    eval "$(ssh-agent -s)"

    # note: use -t rsa -b 4096 if system doesn't support Ed25519 algorithm
    ssh-keygen -t ed25519 -C "justme@example.com" \
      -f ~/.ssh/myid_as_ed25519

    # add key to ssh-agent and store passprhase in keychain
    $ ssh-add -K ~/.ssh/myid_as_ed25519

  output: |
    Agent pid 59566

    Generating public/private ed25519 key pair.
    Enter passphrase (empty for no passphrase):
    Enter same passphrase again:
    Your identification has been saved in /Users/justme/.ssh/myid_as_ed25519.
    Your public key has been saved in /Users/justme/.ssh/myid_as_ed25519.pub.
    The key fingerprint is:
    SHA256:9zABCDEx9sp+zyxTestTest+LoremIpsum justme@example.com
    The key's randomart image is:
    +--[ED25519 256]--+
    |.  ..     .   .o.|
    |     .o.. .o .o .|
    |                 |
    |     ..o + + = * |
    |                 |
    |B       o        |
    |    o... o . . .+|
    |     ...T o   +o.|
    |     oo.  .  .== |
    +----[SHA256]-----+

  articles:
    - url: https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent
      title: Generating a new SSH key and adding it to the ssh-agent

    - url: https://superuser.com/questions/1004254/how-can-i-change-the-directory-that-ssh-keygen-outputs-to
      title: How can I change the directory that ssh-keygen outputs to?

  notes: |
    May need to edit ~/.ssh/config to point to non traditional IdentityFile location, e.g.

    ```
    Host *
     AddKeysToAgent yes
     UseKeychain yes
     IdentityFile ~/.ssh/id_rsa
     IdentityFile ~/.ssh/myid_as_ed25519
    ```


"`ffmpeg` convert a video to gif":
  date: 2021-07-30
  code: |
    # minimalist conversion (infinite looping GIF, i.e. -loop=0, is the default)
    ffmpeg -i input.mp4 output.gif

    # yes-to-overwrite, 15 frames-per-second
    # scaled to 225px wide w/ lanczos scaler, and non-looping
    ffmpeg -y -i input.mp4 \
      -vf "fps=15,scale=225:-1:flags=lanczos" -loop -1 \
      output.gif

    # generate a palette png file that favors areas with motion
    ffmpeg -y -i input.mp4 -vf "palettegen=stats_mode=diff" palette.png

    # and then use that palette png
    ffmpeg -y -i input.mp4 -i palette.png -lavfi paletteuse output.gif


  articles:
    - title: How do I convert a video to GIF using ffmpeg, with reasonable quality?
      url: https://superuser.com/a/556031
    - title: Optimizing GIFS with FFMPEG
      url: https://cassidy.codes/blog/2017/04/25/ffmpeg-frames-to-gif-optimization/
    - title: High quality GIF with FFmpeg
      url: https://web.archive.org/web/20200612084604/http://blog.pkh.me/p/21-high-quality-gif-with-ffmpeg.html

"`ffmpeg` resize a video and preserve its aspect ratio":
  date: 2021-06-21
  updated: 2021-11-15
  code: |
    # to rescale a video's width to 450 pixels and autoscale its height
    ffmpeg -i in_video.mp4 -vf scale=450:-2 out_video.mp4

    # to rescale a video's height to 204 pixels and autoscale its width
    ffmpeg -i in_video.mp4 -vf scale=-2:204 out_video.mp4

    # Note that the given pixel width/height should be an even number
    # to avoid getting an error like: height not divisible by 2 (500x201)

  articles:
    - title: "How to resize a video to make it smaller with FFmpeg"
      url: https://superuser.com/questions/624563/how-to-resize-a-video-to-make-it-smaller-with-ffmpeg
    - title: |
        FFMPEG (libx264) "height not divisible by 2"
      url: https://stackoverflow.com/questions/20847674/ffmpeg-libx264-height-not-divisible-by-2

"`pandoc` convert a Markdown file into a Word docx":
  date: 2021-04-21
  code: |
    pandoc README.md -f markdown -t docx -o README.docx
  articles:
    - title: "Convert Markdown into a Word Document"
      url: https://mrjoe.uk/convert-markdown-to-word-document/


"`find` and list the top 10 most recently modified subdirectories":
  date: 2020-01-05
  code: |
    find ~/a -mindepth 1 -maxdepth 2 -type d \
        -not -name '_*' -not -name '.*' \
        -print0
      | xargs -0 -n1 -I{} \
          stat  -f '%Sm %N' -t '%Y-%m-%d %H:%M:%S' {} \
      | sort -rn | head -n10

    # GNU variant, e.g. with gnu-coretools on macOS
    gfind . -mindepth 1 -maxdepth 2 -type d \
        -not -name '_*' -not -name '.*'  \
        -printf '%T+ %p\n'  \
      | sort -rn \
      | head -n 10

  output: |
    2020-11-27 14:05:45 /Users/dan/Downloads/r-book
    2020-09-25 11:39:45 /Users/dan/Desktop/sf-shelter-data
    2020-06-18 22:45:15 /Users/dan/Downloads/journalism-syllabi
    2020-08-26 20:16:55 /Users/dan/Desktop/vocal-samples
    2020-07-09 14:48:38 /Users/dan/Downloads/svelte-project
    2020-07-09 14:29:43 /Users/dan/Desktop/matplotlibguide
    2020-05-29 22:00:28 /Users/dan/Downloads/buzzfeed-archives
    2020-03-18 14:57:03 /Users/dan/Downloads/transcribe-texts
    2020-01-18 05:55:32 /Users/dan/Desktop/oldstuff
    2020-01-17 16:43:39 /Users/dan/Desktop/random_images

  articles:
    - title: "How to recursively find and list the latest modified files in a directory with subdirectories and times (my answer"
      url: https://stackoverflow.com/questions/5566310/how-to-recursively-find-and-list-the-latest-modified-files-in-a-directory-with-s/65588958#65588958

"`ffmpeg` encode .mkv video to .mp4":
  date: 2020-11-12
  code: |
    ffmpeg -i input.mkv -acodec aac -vcodec libx264 output.mp4
  articles:
    - title: "How can I convert an m4v video to a widely viewable format using ffmpeg?"
      url: https://superuser.com/a/462112/512499


"`unzip` only an archive's CSV files and pipe to stdout":
  date: 2020-08-11
  code: |
    unzip -p schools.zip "*.csv" > schools.csv

"`pygmentize` a code snippet into highlighted rich text that I can paste into GMail":
  date: 2020-08-11
  updated_at: 2021-01-21
  articles:
    - title: Pygments Command Line Interface
      url: https://pygments.org/docs/cmdline/
    - title: Pygments formatting options
      url: https://pygments.org/docs/formatters/
    - title: Pygments style gallery
      url: http://richleland.github.io/pygments-css/
  code: |
    # Converting plaintext to rich-text format and copying to clipboard
    printf "SELECT 1, 2, 3 \nFROM table;" \
      | pygmentize -f rtf -l sql \
      | pbcopy

    # Producing a PNG of a code snippet, using the "vim" stylesheet,
    # 36-point font (default is 14), 21px line spacing (default is 2px),
    # and highlighting lines 2, 4, and 6 in hot pink (line numbers are on by default)
    printf 'SELECT *\n\t, name, id\nFROM\n\tdTable AS Texas\nWHERE\n\tid > "Howdy"\nORDER BY\n\tname DESC;' \
      | pygmentize -f png -l sql \
        -O 'style=vim' \
        -O 'font_size=36,line_pad=21' \
        -O 'hl_color=hotpink,hl_lines=2 4 6' \
      > assets/pretty-pyg-sql.png

  output_md: |
    Example of rich-text format (`-f rtf`) being pasted into GMail:

    ![pygmentize -f rtf -l](./assets/pygmentized-gmailed-snippet.png)

    Example of writing pygmentize into PNG file:

    ![pygmentize -f png](assets/pretty-pyg-sql.png)

  notes: |
    - install via pip: `pip install --upgrade Pygments`
    - Use `-L` to get your installed version of pygmentize's most complete list of all styles, formatters, and lexers



"`rsync` the contents of one directory into another":
  date: 2020-08-06
  articles:
    - title: "How To Use Rsync to Sync Local and Remote Directories on a VPS"
      url: https://www.digitalocean.com/community/tutorials/how-to-use-rsync-to-sync-local-and-remote-directories-on-a-vps
  code: |
    rsync -av src_dir/ target_dir
  output: |
    building file list ... done
    created directory /target_dir
    ./
    .gitignore
    README.md
    static/media/
    static/media/demos/
    static/media/demos/find.mp4

    sent 452477 bytes  received 2378 bytes  50909710.00 bytes/sec
    total size is 472016  speedup is 1.00

  notes: |
    - only the source directory should have a trailing slash
    - the `-v` flag makes for verbose output
    - the `-n` flag does a dry run


"`xargs` (BSD) to pipe results into another command, one at a time":
  date: 2020-06-18
  articles:
    - title: "Execute a command once per line of piped input?"
      url: https://unix.stackexchange.com/questions/7558/execute-a-command-once-per-line-of-piped-input
  code: |
    echo Alice Bob Charlie | xargs -I{} -n1 echo 'Hey, {} is a great name!'
  output: |
    Hey, Alice is a great name!
    Hey, Bob is a great name!
    Hey, Charlie is a great name!


"`magick` convert image to favicon.ico":
  date: 2020-03-24
  articles:
    - title: Convert PNG to ICO
      url: https://imagemagick.org/discourse-server/viewtopic.php?t=36031
  code: |
    magick /tmp/testimage.png -background none -resize 128x128 -density 128x128 favicon.ico

"`find` and tally total kilobytes of hard disk space for files with given extension(s)":
  date: 2020-02-18
  articles:
    - title: "Find the total size of certain files within a directory branch"
      url: https://unix.stackexchange.com/questions/41550/find-the-total-size-of-certain-files-within-a-directory-branch/148472
  code: |
    echo $(find . -type f \
            \( -iname "*.csv" -o -iname '*.xls*' \) \
            -printf "(%k/1024)+" \
            2>/dev/null; \
            echo 0;) | bc

  output: |
    15732

  notes: |

    - Requires the use of gnu-find (gfind on my MacOS)
    - use `-printf "%s+"` to print size by bytes
    - `2>/dev/null` hides error messages
    - `-iname` is case-insensitive


"`printf` to stderr":
  date: 2019-11-23
  articles:
    - title: print output to stderr, not stdout
      url: https://stackoverflow.com/questions/2990414/echo-that-outputs-to-stderr
  code: |
    >&2 printf 'Error: %s\n' 'There was a problem' 'And another problem'
  output: |
    Error: There was a problem
    Error: And another problem

"`stem` a filename, i.e. get filename sans path or extension":
  date: 2019-11-02
  articles:
    - title: Extract filename and extension in Bash
      url: https://stackoverflow.com/questions/965053/extract-filename-and-extension-in-bash
  code: |
    fullname=/tmp/hello/world.txt
    newname="a_whole_new_$(basename ${fullname%.*})"
    echo $newname
  output: |
    a_whole_new_world

"`pkill` using a file pattern":
  date: 2019-07-25
  articles:
    - url: https://stackoverflow.com/questions/8987037/how-to-kill-all-processes-with-a-given-partial-name
      title: How to kill all processes with a given partial name?
  code: |
    pkill -fil ipython
  output: |
    kill -15 90396
    kill -15 90523

"`pgrep` and get all process info":
  date: 2019-07-25
  articles:
    - url: https://serverfault.com/questions/77162/how-to-get-pgrep-to-display-full-process-info
      title: How to get pgrep to display full process info
  code: |
    # MacOS
    pgrep -fil 'rails'

    # Linux
    pgrep -af 'rails'

  output: |

    47502 rails master RBENV_VERSION=2.5.1 TERMINAL_FONT=Monaco
    47517 rails worker[0] RBENV_VERSION=2.5.1 TERMINAL_FONT=Monaco


"`tar` extraction, verbose":
  date: 2019-07-18
  articles:
      - title: The tar command explained
        url: https://www.howtoforge.com/tutorial/linux-tar-command/
  code: |
    tar xzfv ARCHIVE.TAR.GZ


"`find` file by name":
  articles:
    - title: 'How can I recursively find all files in current and subfolders based on wildcard matching?'
      url: https://stackoverflow.com/questions/5905054/how-can-i-recursively-find-all-files-in-current-and-subfolders-based-on-wildcard
  code: |
    find . -name "foo*"


"`find` directory name recursively":
  articles:
    - title: How can I recursively search for directory names with a particular string where the string is only part of the directory name
      url: https://askubuntu.com/questions/153144/how-can-i-recursively-search-for-directory-names-with-a-particular-string-where

  code: |
    find START_DIR -type d -name "PATTERN"



"`find` and execute command on each file":
  articles:
    - title: How to run find -exec?
      url: https://unix.stackexchange.com/questions/12902/how-to-run-find-exec

  code: |
    find ./PATTERN -exec FOO BAR {} \;

    find PlainText/*.md -exec wc -l {} \;

